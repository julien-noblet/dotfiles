services:
  traefik:
    image: traefik:latest
    container_name: traefik
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config.yaml:/dynamic/config.yaml:ro
      - ./traefik/acme.json:/acme.json
    environment:
      TZ: Europe/Paris
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
      MAIN_DOMAIN: ${MAIN_DOMAIN}
      EMAIL: ${EMAIL}
    security_opt:
      - no-new-privileges:true
    ports:
      # Port 80 is only used for redirecting to https; Some TLDs don't even support connecting to it (i.e. .dev).
      # Let's Encrypt will use a challenge on port 443 to verify the domain (TLS-ALPN-01);
      # See https://doc.traefik.io/traefik/https/acme/#tlschallenge for more information.
      - 80:80 # web
      - 443:443 # websecure
      # - 8080:8080 # traefik
      - 49181:49181 # kuma
      - 49190:49190 # wallabag
    networks:
      #- blocky
      - public
      #- loki
      - traefik
    command:
      - --log.level=DEBUG
      - --log.format=json
      - --api=true
      - --api.basePath=/traefik
      # - --api.insecure=true
      - --entryPoints.web.address=:80
      - --providers.docker=true
      # - --providers.docker.network=blocky_network
      # Do not expose containers unless explicitly told so
      - --providers.docker.exposedbydefault=false
      # - --providers.docker.allowEmptyServices=true
      - --entryPoints.websecure.address=:443
      # - --entryPoints.loki.address=:3100
      - --entryPoints.kuma.address=:49181
      - --ping=true
      # - --entryPoints.webwallabag.address=:49190
      - --metrics.addinternals
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --accesslog=true
      # - --accesslog.format=json
      - --providers.file.directory=/dynamic
      - --providers.file.watch=true
      # - --experimental.plugins.sablier.modulename=github.com/sablierapp/sablier
      # - --experimental.plugins.sablier.version=v1.8.1
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=acme.json
      - --certificatesresolvers.myresolver.acme.tlschallenge=true

    restart: always
    healthcheck:
      # Run traefik healthcheck command
      # https://doc.traefik.io/traefik/operations/cli/#healthcheck
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    dns: 1.1.1.1
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.entryPoints: http
      traefik.http.routers.traefik.rule: Host(`${MAIN_DOMAIN}`)
      traefik.http.middlewares.traefik-auth.basicauth.users: ${TRAEFIK_DASHBOARD_CREDENTIALS}
      traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.sslheaders.customrequestheaders.X-Forwarded-Proto: https
      traefik.http.routers.traefik.middlewares: traefik-https-redirect
      traefik.http.routers.traefik-secure.entryPoints: websecure
      traefik.http.routers.traefik-secure.rule: Host(`${MAIN_DOMAIN}`) && PathPrefix(`/traefik`)
      traefik.http.routers.traefik-secure.middlewares: traefik-auth
      traefik.http.routers.traefik-secure.tls: true
      traefik.http.routers.traefik-secure.tls.certresolver: myresolver
      traefik.http.routers.traefik-secure.tls.domains[0].main: ${MAIN_DOMAIN}
      traefik.http.routers.traefik-secure.tls.domains[0].sans: ${MAIN_DOMAIN}
      traefik.http.routers.traefik-secure.service: api@internal

networks:
  traefik:
    name: traefik
    internal: true
